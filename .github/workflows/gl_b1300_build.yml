name: GL-INET B1300 OpenWrt Build

on:
  push:
    paths:
      - 'CHANGELOG.md'

jobs:

  build:

    runs-on: ubuntu-latest

    steps:

      - name: Checkout
        uses: actions/checkout@master
        with:
          ref: master
      - name: Initialize Environment
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          sudo apt-get update
          sudo rm -rf /usr/share/dotnet /usr/local/lib/android/sdk
          sudo docker image prune -a -f
          sudo apt-get -y install unzip subversion
          sudo apt-get -y purge dotnet* ghc* google* llvm* mysql* php* zulu* firefox hhvm
          sudo apt-get -y autoremove --purge
          sudo apt-get -y install build-essential asciidoc binutils bzip2  \
          gawk gettext git libncurses5-dev libz-dev patch python3 python2.7  \
          unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex uglifyjs \
          git-core gcc-multilib p7zip p7zip-full msmtp libssl-dev texinfo  \
          libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake \
          libtool autopoint device-tree-compiler g++-multilib antlr3 gperf \
          wget curl swig rsync
      - name: Print Disk Space Before
        run: |
          df -H
      - name: Download Source
        run: |
          rm -fr openwrt
          git clone https://github.com/coolsnowwolf/lede openwrt

      - name: Install Extra Packages
        run: |
          cd openwrt/package
          git clone https://github.com/rufengsuixing/luci-app-adguardhome

      - name: Update Feeds		
        run: |		
          cd openwrt
          ##sed -i /^#src-git helloworld*/src-git helloworld https:\/\/github.com\/fw876\/helloworld/' feeds.conf.default
          echo "src-git helloworld https://github.com/fw876/helloworld" >> feeds.conf.default
          ./scripts/feeds update -a		
          ./scripts/feeds install -a

      - name: Custom Configure Files		
        run: |		
          cp b1300_config openwrt/.config

      - name: Make Configure Files		
        run: |		
          cd openwrt
          make defconfig
          
      - name: Download		
        run: |
          cd openwrt
          make -j8 download V=s
          df -H

      - name: Compile OpenWrt
        run: |
          cd openwrt
          make -j1 V=s

      - name: Print Disk Space After
        run: |
          df -h
          echo "======================="
          echo "Space usage:"
          echo "======================="
          du -h --max-depth=1 ./ --exclude=build_dir --exclude=bin
          du -h --max-depth=1 ./build_dir
          du -h --max-depth=1 ./bin
      - name: Prepare artifact
        run: |
          rm -rf ./artifact/
          mkdir -p ./artifact/firmware
          mkdir -p ./artifact/package
          mkdir -p ./artifact/buildinfo
          # rm -rf $(find ./bin/targets/ -type d -name "packages")
          # cp -rf $(find ./bin/targets/ -type f) ./artifact/firmware/
          # cp -rf $(find ./bin/packages/ -type f -name "*.ipk") ./artifact/package/
          # cp -rf $(find ./bin/targets/ -type f -name "*.buildinfo" -o -name "*.manifest") ./artifact/buildinfo/
          cp -rf $(find ./bin/targets/ -type f -name "*.bin") ./artifact/firmware/
      
      - name: Deliver buildinfo
        uses: actions/upload-artifact@v2
        with:
          name: OpenWrt_buildinfo
          path: ./artifact/buildinfo/

      - name: Deliver package
        uses: actions/upload-artifact@v2
        with:
          name: OpenWrt_package
          path: ./artifact/package/

      - name: Deliver firmware
        uses: actions/upload-artifact@v2
        with:
          name: OpenWrt_firmware
          path: ./artifact/firmware/
  

      # - name: Upload release asset
      #   if: github.event == 'release'
      #   uses: svenstaro/upload-release-action@v2
      #   with:
      #     repo_token: ${{ secrets.YOURTOKEN }}
      #     file: ./artifact/firmware/*
      #     tag: ${{ github.ref }}
      #     file_glob: true
          
      